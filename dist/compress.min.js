"use strict";var app=angular.module("MDevPortal",["ngMaterial","datatables","ngMessages","ngRoute","material.svgAssetsCache","ngMdIcons","ngMdBadge","ngAnimate","ngScrollbars","duScroll","ngAria"]);function makeUid(){for(var t="",e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",o=e.length,a=0;a<8;a++)t+=e.charAt(Math.floor(Math.random()*o));return t}function redirectToLogin(t){window.location.replace(`${window.location.origin}?message=${t.data}`)}function logout(t){window.localStorage.setItem("x",null),window.location.replace(`${window.location.origin}/logout`)}function redirectToLogin(){window.localStorage.setItem("x",""),window.location.replace(`${window.location.origin.replace(/\/+$/,"")}?status=You do not have sufficient rights to view this page`)}function isJson(t){try{JSON.parse(t)}catch(t){return!1}return!0}app.config(function(ScrollBarsProvider){ScrollBarsProvider.defaults={scrollButtons:{scrollAmount:"auto",enable:!0},axis:"yx",autoHideScrollbar:!0,theme:"dark",advanced:{updateOnContentResize:!0}}}),app.config(function($mdThemingProvider){$mdThemingProvider.definePalette("neonBlue",{50:"eaf4fe",100:"c9e5fd",200:"a6d3fc",300:"82c1fa",400:"67b4f9",500:"4ca7f8",600:"459ff7",700:"3c96f6",800:"338cf5",900:"247cf3",A100:"ffffff",A200:"f9fbff",A400:"c6ddff",A700:"adcdff",contrastDefaultColor:"light",contrastDarkColors:["50","100","200","300","400","500","600","700","A100","A200","A400","A700"],contrastLightColors:["800","900"]}),$mdThemingProvider.enableBrowserColor({theme:"neonBlue",palette:"neonBlue"}),$mdThemingProvider.theme("default").primaryPalette("neonBlue").accentPalette("orange").warnPalette("blue"),$mdThemingProvider.alwaysWatchTheme(!0)}),app.config(function($routeProvider){$routeProvider.when("/",{templateUrl:"/assets/login.html"}).when("/register",{templateUrl:"/assets/registration.html"}).when("/dashboard",{templateUrl:"/assets/dashboard.html"}).when("/forgot",{templateUrl:"/assets/requestpasswordreset.html"}).when("/useradmin",{templateUrl:"/assets/useradmin.html"}).when("/reset",{templateUrl:"/assets/passwordreset.html"})}),angular.module("MDevPortal").factory("AuthService",function($http){var t={checkAuthToken:t=>$http({url:`${window.location.origin}/check/token/${t.token}`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(function(t){if(200===t.status)return console.log("Valid User Token"),t.data;console.error(`err->${t}`),window.location.replace(`${window.location.origin}?message=Could not verify, Please contact administrator`)},function(t){window.location.replace(`${window.location.origin}?message=Could not verify, Please contact administrator`)}),verifyAdmin:t=>(console.log("checking token..."),t?$http({url:`${window.location.origin}/check/admin/${t.token}`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(function(t){return 200===t.status?(console.log("Valid Admin Token"),t.data):(console.error(`err->${t}`),t)},function(t){return t}):new Promise((t,e)=>{t({r:!1})})),getBots:t=>(t&&null!==t||logout(),$http({url:`${window.location.origin}/api/bots`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":t.token}}).then(function(t){if(200===t.status)try{return void 0!==t.data.bots?(t.data.bots.map(t=>{0==t.status?t.on=!1:t.on=!0,t.name.length>19&&(t.name=t.name.substring(0,20)+"...")}),t.data):{bots:[]}}catch(t){}else if(401===t.status)return null},function(t){swal("Something went wrong",t.data,"error"),401===t.status&&redirectToLogin(t)})),getUsers:(t,e)=>$http({url:`${window.location.origin}/admin/users/${t}`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":e}}).then(function(t){if(200===t.status)return t.data;console.error(`err->${t}`),swal("Something went wrong",t.data,"error"),window.location.replace(`${window.location.origin}/#!`)},function(t){swal("Something went wrong",t.data,"error"),window.location.replace(`${window.location.origin}/#!`)}),getBotsByQuery:(t,e,o,a)=>$http({url:`${window.location.origin}/admin/bots/${t}/${o}/${a}`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":e}}).then(function(t){if(200===t.status)return t.data;console.error(`err->${t}`),swal("Something went wrong",t.data,"error"),window.location.replace(`${window.location.origin}/#!`)},function(t){swal("Something went wrong",t.data,"error"),window.location.replace(`${window.location.origin}/#!`)}),logout:t=>{$http({url:`${window.location.origin}/logout`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":t.token}}).then(function(t){window.localStorage.setItem("x",null),window.location.replace(`${window.location.origin}/#!`)})}};return t}),app.controller("loginCtrl",function($scope,$http,$location,AuthService){$scope.loading=!1,$scope.h1="Login";var t={};window.location.search.replace(/([^?&=]+)=([^&]+)/g,(e,o,a)=>t[o]=a),$scope.authenticate=function(){$scope.loading=!0,$http({url:`${window.location.origin}/login`,method:"POST",data:{email:$scope.Email,password:$scope.Password},headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(function(t){200===t.status?($scope.loading=!1,window.localStorage.setItem("x",t.data),window.location.replace(`${window.location.origin}/#!dashboard`)):($scope.loading=!1,swal("Something went wrong",t.data,"error"))},function(t){$scope.loading=!1,swal("Something went wrong",t.data,"error")})},t.message&&swal(decodeURI(t.message)),t.status&&swal(decodeURI(t.status))}),app.controller("RegistrationCtrl",function($scope,$http,$location){$scope.loading=!1,$scope.checkResult=!1,$scope.CheckEmail=function(){if(!($scope.Email.indexOf("@")<0)){$http({url:`${window.location.origin}/checkEmail`,method:"POST",data:{email:$scope.Email},headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(function(t){!0===t.data.exists?$scope.checkResult=!0:$scope.checkResult=!1},function(t){$scope.loading=!1,console.error(t)})}},$scope.register=function(){$scope.loading=!0;$http({url:`${window.location.origin}/registerUser`,method:"POST",data:{firstname:$scope.FirstName,lastname:$scope.LastName,email:$scope.Email,phone:$scope.Phone,password:$scope.Password},headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(function(t){console.log("response is "+t),200===t.status?($scope.loading=!1,swal("Great","Please verify your account by clicking on the verification link we sent to your email.","success")):($scope.loading=!1,swal("Something went wrong",t,"error"))},function(t){$scope.loading=!1,swal("Something went wrong",t.data,"error")})}}),app.controller("dashboardCtrl",function($scope,$mdDialog,$mdSidenav,$http,$location,AuthService){$scope.lockMenu=!1,$scope.limitReached=!1,$scope.loading=!0;var t,e=null;try{e=JSON.parse(window.atob(window.localStorage.getItem("x")))}catch(t){window.location.replace(`${window.location.origin}/`)}function o(t,e,o){o.setAttribute(t,e)}AuthService.verifyAdmin(e).then(t=>{$scope.isA=t.r}),AuthService.getBots(e).then(t=>{$scope.loading=!1,$scope.bots=t.bots,$scope.botLimit=t.limit,$scope.bots.length<1&&$scope.botLimit>$scope.bots.length&&$scope.showAddBot()}),$scope.testWebchat=(t=>{const e=document.createElement("script");o("src","https://web-client-dev.machaao.com/static/js/widget.js",e),o("id","webchat",e),o("chathost","https://web-client-dev.machaao.com",e),o("botname",t.name,e),o("machaaokey",t.token,e),o("themecolor","#2196f3",e),o("avatarurl",t.image_url,e),o("dev","true",e),document.body.appendChild(e),e.onload=(()=>{console.log("loading completed")})}),$scope.fullName=e.fullName?e.fullName:e.firstName+" "+e.lastName,$scope.email=e.email,$scope.settings=((t,e)=>{$scope.bot=e,$mdDialog.show({contentElement:"#botSettingsDialog",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!0})}),$scope.samples=(t=>{$mdDialog.show({contentElement:"#samplesDialog",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!0})}),$scope.refreshStats=(()=>{$scope.loading=!0,AuthService.getBots(e).then(t=>{$scope.bots=t.bots,$scope.botLimit=t.limit,$scope.bots.length<1&&$scope.botLimit>$scope.bots.length&&$scope.showAddBot(),$scope.loading=!1})}),$scope.openLink=(e=>{t=e,Object.assign(document.createElement("a"),{target:"_blank",href:t}).click()}),$scope.save=(()=>{$scope.loading=!0,$mdDialog.cancel(),!0===$scope.bot.on?$scope.bot.status=1:$scope.bot.status=0,$http({url:`${window.location.origin}/api/update`,method:"POST",data:{email:e.email,url:$scope.bot.url,image_url:$scope.bot.image_url,displayName:$scope.bot.displayName,description:$scope.bot.description,status:$scope.bot.status,token:$scope.bot.token},headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":e.token}}).then(function(t){200===t.status?($scope.loading=!1,swal("Success","Bot Updated","success")):($scope.loading=!1,swal("Error",t.data,"error"))},function(t){$scope.loading=!1,swal("Error",t.data,"error")})}),$scope.showAddBot=(t=>{$mdDialog.show({contentElement:"#addBotDialog",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!0})}),$scope.removeAccount=(()=>{$http({url:`${window.location.origin}/api/remove/user/${e.email}`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":e.token}}).then(function(t){200===t.status?window.location.replace(`${window.location.origin}/`):swal("Error",t.data,"error")},function(t){swal("Error",t.data,"error")})}),$scope.close=(()=>{$mdDialog.cancel()}),$scope.logout=(()=>AuthService.logout(e)),$scope.create=(()=>{$scope.loading=!0,$mdDialog.cancel(),$scope.bdisplay&&$http({url:`${window.location.origin}/api/create`,method:"POST",data:{email:e.email,url:$scope.burl,image_url:$scope.bimage,displayName:$scope.bdisplay,description:$scope.bdesc},headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":e.token}}).then(function(t){200===t.status?($scope.bots.push(t.data),$scope.loading=!1):(swal("Error",t.data,"error"),$mdDialog.cancel(),$scope.loading=!1)},function(t){swal("Error",t.data,"error"),$scope.loading=!1,$mdDialog.cancel()})}),$scope.testWebhook=(t=>{$http({url:`${window.location.origin}/api/test/webhook/${t}`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":e.token}}).then(function(t){console.log(t),200===t.status?swal("success","Great, You should see a sample incoming message to your bot."):(swal("Error",t.data,"error"),$mdDialog.cancel())},function(t){swal("Error",t.data,"error"),$scope.loading=!1,$mdDialog.cancel()})}),$scope.checkBotName=function(){$http({url:`${window.location.origin}/api/check/bot/${$scope.bdisplay}`,method:"GET",headers:{"x-access-token":e.token,"Content-Type":"application/json",Accept:"application/json"}}).then(function(t){!0===t.data?$scope.checkBotResult=!0:$scope.checkBotResult=!1},function(t){$scope.loading=!1,console.error(t)})},$scope.toggleLeft=function(){$mdSidenav("left").toggle()}}),app.controller("PasswordResetCtrl",function($scope,$http,$location){$scope.password="",$scope.password2="",$scope.mismatch=!1,$scope.loading=!1;var t={};location.hash.replace(/([^?&=]+)=([^&]+)/g,(e,o,a)=>t[o]=a),$scope.reset=function(){if($scope.loading=!0,$scope.password!==$scope.password2)return $scope.loading=!1,$scope.PasswordReset.password2.$setValidity("mismatch",!1);if(!t.u||!t.token)return swal("Error","Invalid Reset link. Please contact admin via connect@machaao.com","error");$http({url:`${window.location.origin}/reset/password/update`,method:"POST",data:{password:$scope.password,u:t.u,token:t.token},headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(function(t){$scope.loading=!1,swal("Great","Your pasword has been reset succesfully.","success")},function(t){$scope.loading=!1,swal("Something went wrong",t.data,"error"),console.error(t)})}}),app.controller("RequestPasswordResetCtrl",function($scope,$http,$location){$scope.email="",$scope.loading=!1,$scope.request=function(){$scope.loading=!0,$http({url:`${window.location.origin}/reset/password`,method:"POST",data:{email:$scope.email},headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(function(t){$scope.loading=!1,swal("Great","We have sent you a password reset link. Please check your email to proceed.","success")},function(t){$scope.loading=!1,swal("Something went wrong",t.data,"error")})}}),app.controller("useradminCtrl",function($scope,$mdDialog,$mdSidenav,$http,$location,AuthService){$scope.lockMenu=!1,$scope.limitReached=!1,$scope.loading=!1;var t=null,e=this;$scope.users=[],$scope.pickerModel=e.pickerModel={},$scope.filtered=e.filtered=[],$scope.logSearch=e.logSearch=null,$scope.searchBotText=this.searchBotText="",$scope.searchBotDays=this.searchBotDays="7",$scope.botProd="Dev";try{t=JSON.parse(window.atob(window.localStorage.getItem("x")))}catch(t){redirectToLogin()}function o(t){return new Date(1e3*parseInt(t.substring(0,8),16)).toLocaleDateString("en-US")}AuthService.verifyAdmin(t).then(e=>{0!==t.role&&500!==e.statusCode||redirectToLogin()}),$scope.fullName=t.fullName?t.fullName:t.firstName+" "+t.lastName,$scope.email=t.email,$scope.getUsers=(e=>($scope.updateStatus=null,AuthService.getUsers(e,t.token).then(t=>($scope.users=t||[],$scope.users)))),$scope.getAllUsers=(()=>{$http({url:`${window.location.origin}/admin/allusers`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":t.token}}).then(function(t){200===t.status?$scope.userData=t.data:(swal("Error",t.data,"error"),$scope.loading=!1)},function(t){swal("Error",t.data,"error"),$scope.loading=!1,$mdDialog.cancel()})}),$scope.showBot=(e=>{var o=$scope.userData[e].userId;$http({url:`${window.location.origin}/admin/getBotsById/${o}/${$scope.botProd.toLowerCase()}`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":t.token}}).then(function(t){200===t.status?(console.log(t.data[0].bots),$scope.botsdata=t.data[0].bots,$mdDialog.show({contentElement:"#viewBotDialog",clickOutsideToClose:!0})):(swal("Error",t.data,"error"),$scope.loading=!1)},function(t){swal("Error",t.data,"error"),$scope.loading=!1,$mdDialog.cancel()})}),$scope.editUsers=(t=>{$scope.userData[t].userId;$scope.role=$scope.userData[t].role,$scope.botLimit=$scope.userData[t].botLimit,$scope.hdn_id=t,$mdDialog.show({contentElement:"#editUserDialog",clickOutsideToClose:!0})}),$scope.update=(()=>{var e,o,a;e=$scope.hdn_id,a=$scope.userData[e].userId,o={UserId:a,Role:$scope.role,botLimit:$scope.botLimit},console.log(o),$mdDialog.cancel(),$http({url:`${window.location.origin}/admin/user/update`,method:"POST",data:{parameters:o},headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":t.token}}).then(function(t){200===t.status?(swal("Success","Updated successfully","success"),$scope.userData[e].role=o.Role,$scope.userData[e].botLimit=o.botLimit):($scope.loading=!1,swal("Error",t.data,"error"))},function(t){$scope.loading=!1,swal("Error",t.data,"error")})}),$scope.getBotsByQuery=(e=>($scope.loading=!0,AuthService.getBotsByQuery(e,t.token,$scope.botProd.toLowerCase(),$scope.searchBotDays).then(t=>($scope.qBots=t||[],$scope.loading=!1,$scope.qBots)))),$scope.searchBots=(()=>{$scope.getBotsByQuery($scope.searchBotText)}),$scope.$watch("searchBotText",function(t,e,o){null!==t&&t.length>3&&$scope.getBotsByQuery(t)}),$scope.close=(()=>{$mdDialog.cancel()}),$scope.filterLogs=e.filterLogs=(t=>{if(13===t.which){const t=$scope.logData.split("\n");e.filtered=t.filter(t=>t.includes(e.logSearch)),e.filtered=e.filtered.toString().replace(",","/n/n")}}),$scope.logout=(()=>AuthService.logout(t)),$scope.getLogs=(()=>$http({url:`${window.location.origin}/admin/serverlogs`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":t.token}}).then(function(t){if(200===t.status){t.data=t.data.split("\n");let e=[];t.data.map((o,a)=>{try{o.length>0&&!0===isJson(o)&&(t.data[a]=JSON.parse(o),t.data[a].timestamp=t.data[a].timestamp||"null",t.data[a].userId=t.data[a].userId||"null",t.data[a].email=t.data[a].email||"null",t.data[a].o=a,e.push(t.data[a]))}catch(t){console.log("error: "+t+"\nline: "+o)}}),$scope.logData=e}else swal("Error",t.data,"error"),$scope.loading=!1},function(t){swal("Error",t.data,"error"),$scope.loading=!1,$mdDialog.cancel()})),$scope.getRecentNewUsers=(()=>{$http({url:`${window.location.origin}/admin/users/new/recent`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":t.token}}).then(function(t){200===t.status?(console.log(t.data.length),t.data.map((e,a)=>{t.data[a].at=o(e._id)}),$scope.newUsersC=t.data,e.newUsersC=t.data):(swal("Error",t.data,"error"),$scope.loading=!1)},function(t){swal("Error",t.data,"error"),$scope.loading=!1,$mdDialog.cancel()})}),$scope.openPicker=(t=>{$mdDateRangePicker.show(t)}),$scope.getNewUsers=(()=>{const a=new Date(e.pickerModel.dateStart).getTime(),n=new Date(e.pickerModel.dateEnd).getTime();$http({url:`${window.location.origin}/admin/users/${a}/${n}`,method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-access-token":t.token}}).then(function(t){200===t.status?(t.data.map((e,a)=>{t.data[a].at=o(e._id)}),$scope.newUsersC=t.data,e.newUsersC=t.data):(swal("Error",t.data,"error"),$scope.loading=!1)},function(t){swal("Error",t.data,"error"),$scope.loading=!1,$mdDialog.cancel()})}),$scope.toggleLeft=function(){$mdSidenav("left").toggle()}});